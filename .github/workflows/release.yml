# release.yml
name: Build Electron App For Win/Mac

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: build and release electron app

    runs-on: ${{ matrix.os }}
    
    # create a build matrix for jobs
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install && cd frontend && npm install

      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          npm run build-app
      
      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          npm run build-app

      # step5: cleanup artifacts
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "out/make/!(*.exe)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "out/make/!(*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: out/make

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "out/make/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}