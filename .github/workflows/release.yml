# release.yml
name: Build Electron App For Win/Mac

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-electron:
    name: build and release electron app
    runs-on: ${{ matrix.os }}
    
    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      # step3: npm install
      - name: Install npm dependencies
        run: |
          npm install
          cd frontend
          npm install
          cd ../

      # step4: build app for mac/win
      # 安装依赖执行构建，以及推送 github release
      - name: Build app

      # package.json里面配置的编译命令
        run: |
          npm run build-app
      
      # step5: cleanup artifacts
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "out/make/!(*.zip)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "out/make/!(*.dmg)"

  
      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: out/make

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "out/make/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}